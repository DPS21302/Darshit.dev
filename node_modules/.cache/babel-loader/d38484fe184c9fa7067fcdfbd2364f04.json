{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"getRootProps\"];\nimport { useTabContext, getTabId, getPanelId } from '../TabsUnstyled';\nimport { useButton } from '../ButtonUnstyled';\nconst useTab = props => {\n  const {\n    value: valueProp,\n    onChange,\n    onClick,\n    onFocus\n  } = props;\n  const _useButton = useButton(props),\n    {\n      getRootProps: getRootPropsButton\n    } = _useButton,\n    otherButtonProps = _objectWithoutPropertiesLoose(_useButton, _excluded);\n  const context = useTabContext();\n  if (context === null) {\n    throw new Error('No TabContext provided');\n  }\n  const value = valueProp != null ? valueProp : 0;\n  const selected = context.value === value;\n  const selectionFollowsFocus = context.selectionFollowsFocus;\n  const a11yAttributes = {\n    role: 'tab',\n    'aria-controls': getPanelId(context, value),\n    id: getTabId(context, value),\n    'aria-selected': selected,\n    disabled: otherButtonProps.disabled\n  };\n  const handleFocus = event => {\n    if (selectionFollowsFocus && !selected) {\n      if (onChange) {\n        onChange(event, value);\n      }\n      context.onSelected(event, value);\n    }\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n  const handleClick = event => {\n    if (!selected) {\n      if (onChange) {\n        onChange(event, value);\n      }\n      context.onSelected(event, value);\n    }\n    if (onClick) {\n      onClick(event);\n    }\n  };\n  const getRootProps = otherHandlers => {\n    const buttonResolvedProps = getRootPropsButton(_extends({\n      onClick: handleClick,\n      onFocus: handleFocus\n    }, otherHandlers));\n    return _extends({}, buttonResolvedProps, a11yAttributes);\n  };\n  return _extends({\n    getRootProps\n  }, otherButtonProps, {\n    selected\n  });\n};\nexport default useTab;","map":null,"metadata":{},"sourceType":"module"}